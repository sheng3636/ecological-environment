import {
  getStructuralData,
  getScaleData,
  sectionNum,
  sectionProportion,
  sectionList,
  getRankDiff
}
from '@/api/api'
export const qualityMixin = {
  data() {
    return {
      typeLengthMax: 0
    }
  },
  mounted() {
    // 0、获取空气质量达到优良天数比例变化数据并绘制图表
    getStructuralData({
      area: this.cityName,
      zbs: 'AQI优良率'
    }).then(res => {
      let data = res.data[0]
      this.chartArr.sideItem1_0.chartArr[0].name = `${data.yAxis.name}(${data.yAxis.unit})`
      this.chartArr.sideItem1_0.seriesName = `${data.yAxis.name}`
      this.chartArr.sideItem1_0.seriesUnit = `${data.yAxis.unit}`
      this.chartArr.sideItem1_0.dataSource = data.yAxis.source
      this.chartArr.sideItem1_0.xAxis = data.xAxis
      this.chartArr.sideItem1_0.chartArr[0].yAxis = data.yAxis.list
      
      this.barLineChart('sideItem1_0', this.chartArr.sideItem1_0)

      let aaa = this.returnArrLast(this.chartArr.sideItem1_0.xAxis)
      let bbb = this.returnArrLast(this.chartArr.sideItem1_0.chartArr[0].yAxis)
      let ccc = this.returnArrFirst(this.chartArr.sideItem1_0.xAxis)
      let ddd = this.returnDiff(this.returnArrFirst(this.chartArr.sideItem1_0.chartArr[0].yAxis), this.returnArrLast(this.chartArr.sideItem1_0.chartArr[0].yAxis)).toFixed(1)
      let eee = ddd >= 0 ? '增长' : '减少'
      this.chartArr.sideItem1_0.title = `${ccc}年-${aaa}年${this.cityName}空气质量达到优良天数比例变化`
      this.chartArr.sideItem1_0.result = `${aaa}年，${this.cityName}空气质量达到优良天数比例达到<span class="light">${bbb}</span>%，与${ccc}年相比${eee}了<span class="light">${Math.abs(ddd)}</span>%。 `
    })
    // 1、获取各地市空气质量达到优良天数比例对比并绘制图表
    getScaleData({
      area: '浙江省',
      zb: 'AQI优良率'
    }).then(res => {
      let cityName = this.cityName
      let data = res.data
      this.chartArr.sideItem1_1.title = `${data.yAxis.year}年各地市空气质量达到优良天数比例对比`
      this.chartArr.sideItem1_1.chartArr[0].name = `${data.yAxis.name}(${data.yAxis.unit})`
      this.chartArr.sideItem1_1.dataSource = data.yAxis.source
      this.chartArr.sideItem1_1.xAxis = data.xAxis
      this.chartArr.sideItem1_1.chartArr[0].yAxis = data.yAxis.list
      this.chartArr.sideItem1_1.markLine.data[0].yAxis = this.returnArrAvg(data.yAxis.list)
      let i = data.xAxis.findIndex(function (value) {
        return value === cityName
      })
      this.barLineChart('sideItem1_1', this.chartArr.sideItem1_1)

      let aaa = this.returnDiff(this.returnArrAvg(data.yAxis.list), data.yAxis.list[i]) >= 0 ? '高于' : '低于'
      getRankDiff({
        area: cityName,
        zb: 'AQI优良率'
      }).then(res1 => {
        let rankDiff = this.returnDiff(res1.data.newRank, res1.data.oldRank)
        let bbb = rankDiff > 0 ? '上升' + Math.abs(rankDiff) + '位' : rankDiff === 0 ? '维持不变' : '下降' + Math.abs(rankDiff) + '位'
        this.chartArr.sideItem1_1.result = `${data.yAxis.year}年，${this.cityName}空气质量达到优良天数的比例<span class="light">${aaa}</span>全省平均水平，排名<span class="light">${bbb}</span>。`
      })
    })
    // 2、获取管辖各县级城市空气质量达到优良天数比例并绘制图表
    getScaleData({
      area: this.cityName,
      zb: 'AQI优良率'
    }).then(res => {
      let data = res.data
      this.chartArr.sideItem1_2.title = `${data.yAxis.year}年${this.cityName}管辖各县级城市空气质量达到优良天数比例`
      this.chartArr.sideItem1_2.chartArr[0].name = `${data.yAxis.name}(${data.yAxis.unit})`
      this.chartArr.sideItem1_2.dataSource = data.yAxis.source
      this.chartArr.sideItem1_2.xAxis = data.xAxis
      this.chartArr.sideItem1_2.chartArr[0].yAxis = data.yAxis.list
      this.barLineChart('sideItem1_2', this.chartArr.sideItem1_2)

      let aaa = this.returnRepeatNumArr(this.chartArr.sideItem1_2.xAxis, this.chartArr.sideItem1_2.chartArr[0].yAxis, this.chartArr.sideItem1_2.chartArr[0].yAxis[this.chartArr.sideItem1_2.chartArr[0].yAxis.length - 1], 'max')
      let bbb = this.returnRepeatNumArr(this.chartArr.sideItem1_2.xAxis, this.chartArr.sideItem1_2.chartArr[0].yAxis, this.chartArr.sideItem1_2.chartArr[0].yAxis[0], 'min')
      this.chartArr.sideItem1_2.result = `${data.yAxis.year}年，${this.cityName}管辖的各县级城市中，${aaa.join()}空气质量达到优良天数比例最低，达到<span class="light">${this.returnArrLast(this.chartArr.sideItem1_2.chartArr[0].yAxis)}</span>%；${bbb.join()}最高，为<span class="light">${this.chartArr.sideItem1_2.chartArr[0].yAxis[0]}</span>%。`
    })

    // 3、获取市管辖各县级城市PM2.5年均浓度（µg/m³）对比并绘制图表
    getScaleData({
      area: this.cityName,
      zb: 'PM2.5浓度'
    }).then(res => {
      let data = res.data
      this.chartArr.sideItem1_3.title = `${data.yAxis.year}年${this.cityName}管辖各县级城市PM2.5年均浓度（µg/m³）对比`
      this.chartArr.sideItem1_3.chartArr[0].name = `${data.yAxis.name}(${data.yAxis.unit})`
      this.chartArr.sideItem1_3.dataSource = data.yAxis.source
      this.chartArr.sideItem1_3.xAxis = data.xAxis
      this.chartArr.sideItem1_3.chartArr[0].yAxis = data.yAxis.list
      this.barLineChart('sideItem1_3', this.chartArr.sideItem1_3)

      let aaa = this.returnRepeatNumArr(this.chartArr.sideItem1_3.xAxis, this.chartArr.sideItem1_3.chartArr[0].yAxis, this.chartArr.sideItem1_3.chartArr[0].yAxis[this.chartArr.sideItem1_3.chartArr[0].yAxis.length - 1], 'max')
      let bbb = this.returnRepeatNumArr(this.chartArr.sideItem1_3.xAxis, this.chartArr.sideItem1_3.chartArr[0].yAxis, this.chartArr.sideItem1_3.chartArr[0].yAxis[0], 'min')
      this.chartArr.sideItem1_3.result = `${data.yAxis.year}年，${this.cityName}管辖的各县级城市中，${bbb.join()}PM2.5年均浓度最高，达到<span class="light">${this.chartArr.sideItem1_3.chartArr[0].yAxis[0]}</span>µg/m³；${aaa.join()}最低，达到<span class="light">${this.returnArrLast(this.chartArr.sideItem1_3.chartArr[0].yAxis)}</span>µg/m³`
    })

    // 4、获取年各地市PM2.5年均浓度（µg/m³）对比并绘制图表
    getScaleData({
      area: '浙江省',
      zb: 'PM2.5浓度'
    }).then(res => {
      let data = res.data
      this.chartArr.sideItem1_4.title = `${data.yAxis.year}年各地市PM2.5年均浓度（µg/m³）对比`
      this.chartArr.sideItem1_4.chartArr[0].name = `${data.yAxis.name}(${data.yAxis.unit})`
      this.chartArr.sideItem1_4.xAxis = data.xAxis
      this.chartArr.sideItem1_4.dataSource = data.yAxis.source
      this.chartArr.sideItem1_4.chartArr[0].yAxis = data.yAxis.list
      this.barLineChart('sideItem1_4', this.chartArr.sideItem1_4)

      let rank = this.chartArr.sideItem1_4.xAxis.indexOf(this.cityName)
      this.chartArr.sideItem1_4.result = `${data.yAxis.year}年，${this.cityName}PM2.5年均浓度在全省排第<span class="light">${11 - rank}</span>位`
    })

    // 5、获取年市管辖各县级城市PM2.5年均浓度（µg/m³）对比并绘制图表
    getStructuralData({
      area: this.cityName,
      zbs: 'PM2.5浓度'
    }).then(res => {
      let data = res.data[0]
      this.chartArr.sideItem1_5.title = `${this.returnArrFirst(data.xAxis)}年-${this.returnArrLast(data.xAxis)}年${this.cityName}PM2.5年平均浓度（µg/m³）变化`
      this.chartArr.sideItem1_5.chartArr[0].name = `${data.yAxis.name}(${data.yAxis.unit})`
      this.chartArr.sideItem1_5.dataSource = data.yAxis.source
      this.chartArr.sideItem1_5.xAxis = data.xAxis
      this.chartArr.sideItem1_5.chartArr[0].yAxis = data.yAxis.list
      this.barLineChart('sideItem1_5', this.chartArr.sideItem1_5)

      let aaa = this.chartArr.sideItem1_5.chartArr[0].yAxis[this.chartArr.sideItem1_5.chartArr[0].yAxis.length - 1]
      let qualified = this.returnDiff(aaa, 35) > 0 ? '达到' : '不达到'
      this.chartArr.sideItem1_5.result = `${this.returnArrLast(this.chartArr.sideItem1_5.xAxis)}年，${this.cityName}PM2.5浓度年均达到<span class="light">${aaa}</span>µg/m³，<span class="light">${qualified}</span>国家空气质量二级标准要求（35µg/m³）。`
    })

    // 6、各县（市、区）III类以上水质断面数量
    sectionNum({
      area: this.cityName
    }).then(res => {
      let data = res.data
      this.chartArr.sideItem1_6.title = `${data.yAxis.year}${this.cityName}各县（市、区）III类以上水质断面数量`
      this.chartArr.sideItem1_6.dataSource = '省生态环境厅'
      this.chartArr.sideItem1_6.xAxis = data.xAxis
      this.chartArr.sideItem1_6.chartArr[0].yAxis = data.yAxis.threeList
      this.chartArr.sideItem1_6.chartArr[1].yAxis = data.yAxis.numList
      this.barLineChart('sideItem1_6', this.chartArr.sideItem1_6)

      let dataArr = []
      let qualifiedNameArr = []
      let notQualifiedNameArr = []
      for (let i = 0; i < this.chartArr.sideItem1_6.xAxis.length; i++) {
        dataArr.push({
          name: this.chartArr.sideItem1_6.xAxis[i],
          value1: this.chartArr.sideItem1_6.chartArr[0].yAxis[i],
          value2: this.chartArr.sideItem1_6.chartArr[1].yAxis[i]
        })
      }
      let qualifiedArr = dataArr.filter(item => {
        if (item.value2 !== 0) {
          return item.value1 === item.value2
        }
      })
      let notQualifiedArr = dataArr.filter(item => {
        return item.value1 !== item.value2 || item.value2 === 0
      })

      for (let i = 0; i < qualifiedArr.length; i++) {
        qualifiedNameArr.push(qualifiedArr[i].name)
      }
      for (let i = 0; i < notQualifiedArr.length; i++) {
        notQualifiedNameArr.push(notQualifiedArr[i].name)
      }
      let aaa = qualifiedNameArr.length > 0 ? qualifiedNameArr.join() : '无'
      let bbb = notQualifiedNameArr.length > 0 ? `<span class="light">${notQualifiedNameArr.join()}</span>省控断面水质均未达到III类。` : ''

      this.chartArr.sideItem1_6.result = `${data.yAxis.year}年，${this.cityName}<span class="light">${aaa}</span>省控断面水质达到III类。${bbb} `
    })
    // 8、获取年市省控断面水质类型变化数据并绘制图表
    getStructuralData({
      area: this.cityName,
      zbs: 'I类,II类,III类,IV类,V类,劣V类'
    }).then(res => {
      let data = res.data         
      this.chartArr.sideItem1_8.title = `${this.returnArrFirst(data[0].xAxis)}年-${this.returnArrLast(data[0].xAxis)}年${this.cityName}省控断面水质类型变化`
      this.chartArr.sideItem1_8.chartArr[0].name = data[0].yAxis.name
      this.chartArr.sideItem1_8.chartArr[1].name = data[1].yAxis.name
      this.chartArr.sideItem1_8.chartArr[2].name = data[2].yAxis.name
      this.chartArr.sideItem1_8.chartArr[3].name = data[3].yAxis.name
      this.chartArr.sideItem1_8.chartArr[4].name = data[4].yAxis.name
      this.chartArr.sideItem1_8.chartArr[5].name = data[5].yAxis.name
      this.chartArr.sideItem1_7.dataSource = data[0].yAxis.source
      this.chartArr.sideItem1_8.dataSource = data[0].yAxis.source
      this.chartArr.sideItem1_8.xAxis = data[0].xAxis
      this.chartArr.sideItem1_8.chartArr[0].yAxis = data[0].yAxis.list
      this.chartArr.sideItem1_8.chartArr[1].yAxis = data[1].yAxis.list
      this.chartArr.sideItem1_8.chartArr[2].yAxis = data[2].yAxis.list
      this.chartArr.sideItem1_8.chartArr[3].yAxis = data[3].yAxis.list
      this.chartArr.sideItem1_8.chartArr[4].yAxis = data[4].yAxis.list
      this.chartArr.sideItem1_8.chartArr[5].yAxis = data[5].yAxis.list
      this.barLineChart('sideItem1_8', this.chartArr.sideItem1_8)

      let sum = 0
      for (var i = 0; i < data.length; i++) {
        sum += this.returnArrLast(data[i].yAxis.list)
      }

      // 7、获取全省各地市III类以上水质断面占比数据并绘制图表
      sectionProportion({
        area: '浙江省'
      }).then(resp => {
        let data1 = resp.data
        this.chartArr.sideItem1_7.title = `${data1.yAxis.year}全省各地市III类以上水质断面占比`
        this.chartArr.sideItem1_7.xAxis = data1.xAxis
        this.chartArr.sideItem1_7.chartArr[0].yAxis = data1.yAxis.ratelist
        this.barLineChart('sideItem1_7', this.chartArr.sideItem1_7)

        let i = this.chartArr.sideItem1_7.xAxis.indexOf(this.cityName)
        this.chartArr.sideItem1_7.result = `${data1.yAxis.year}年，${this.cityName}<span class="light">${sum}</span>个省控水质断面中，III类以上占比为<span class="light">${this.chartArr.sideItem1_7.chartArr[0].yAxis[i]}</span>%，在全省11个地市中排第<span class="light">${i + 1}</span>名。`
      })
      
      this.chartArr.sideItem1_9.result = `${this.returnArrLast(data[0].xAxis)}年，${this.cityName}<span class="light">${sum}</span>个省控水质断面中，I类<span class="light">${this.returnArrLast(data[0].yAxis.list)}</span>个，II类<span class="light">${this.returnArrLast(data[1].yAxis.list)}</span>个，III类<span class="light">${this.returnArrLast(data[2].yAxis.list)}</span>个，IV类<span class="light">${this.returnArrLast(data[3].yAxis.list)}</span>个，V类<span class="light">${this.returnArrLast(data[4].yAxis.list)}</span>个，劣IV类<span class="light">${this.returnArrLast(data[5].yAxis.list)}</span>个。`
    })
    // 市省控断面水质类型
    sectionList({
      area: this.cityName
    }).then(res => {
      let data = res.data.data
      this.chartArr.sideItem1_9.title = `${res.data.year}年${this.cityName}各省控断面水质类型`
      this.chartArr.sideItem1_9.dataSource = '省生态环境厅'
      this.chartArr.sideItem1_9.list = data
      let arr = []
      for (let i = 0; i < data.length; i++) {
        arr.push(data[i].list.length)
      }
      for (var i = 0; i < arr.length; i++) {
        if (arr[i] > this.typeLengthMax) {
          this.typeLengthMax = arr[i]
        }
      }
    })
  },
  methods: {
    // 导出各省控断面水质类型
    exportType() {
      window.open(this.baseUrl + '/section/exportSection?area=' + this.cityName, '_self')
    }
  }
}